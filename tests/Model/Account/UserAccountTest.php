<?php

namespace Tests\Model\Account;

use App\Model\Account\UserAccount;
use App\Repository\Account\UserAccountRepository;
use App\User;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class UserAccountTest extends TestCase
{
    use DatabaseTransactions;
    use DatabaseMigrations;


    private $user;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = factory(User::class)->create();
    }

    /**
     * @test
     */
    function create_account_user()
    {
        $user = $this->createUser();
        $account = $this->createUserAccount($user);
        $this->assertEquals(1, count($account));
    }

    protected function createUser()
    {
        $user = factory(User::class)->create();
        return $user;
    }

    protected function createUserAccount(User $user)
    {
        $account = factory(UserAccount::class)->create([
            "user_id" => $user->getId()
        ]);
        return $account;
    }

}
